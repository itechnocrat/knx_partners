// Update the VARIANT arg in docker-compose.yml to pick a Python version: 3, 3.8, 3.7, 3.6
{
    "name": "knx.partners",
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspace",
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "terminal.integrated.shell.linux": "/bin/bash",
        "sqltools.connections": [
            {
                "name": "Container database",
                "driver": "PostgreSQL",
                "previewLimit": 50,
                "server": "localhost",
                "port": 5432,
                "database": "postgres",
                "username": "postgres",
                "password": "postgres"
            }
        ],
        "python.pythonPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
        "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
        "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
        "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
        "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
        "python.testing.pytestPath": "/usr/local/py-utils/bin/pytest",
        "python.languageServer": "Pylance",
        "python.linting.pylintArgs": [
            "--load-plugins=pylint_django",
            "--load-plugins=pylint-plugin-utils",
            "--load-plugins=pylint_django.checkers.migrations",
            "--disable=C0114, C0115, C0116, W0222",
            "--disable=imported-auth-user",
            "--disable=invalid-name",
            "--disable=line-too-long",
            "--disable=django-not-configured",
            "--django-settings-module=capsule.settings",
        ],
        "[python]": {
            "editor.formatOnSave": true
        },
        "[json]": {
            "editor.defaultFormatter": "vscode.json-language-features",
            "editor.formatOnSave": true
        },
        "[jsonc]": {
            "editor.defaultFormatter": "vscode.json-language-features",
            "editor.formatOnSave": true
        }
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-python.python",
        "visualstudioexptteam.vscodeintellicode",
        // "mtxr.sqltools",
        // "mtxr.sqltools-driver-pg",
        "eamodio.gitlens",
        "mhutchie.git-graph",
        // "github.vscode-pull-request-github",
        // "donjayamanne.githistory",
        // "huizhou.githd",
        "ms-python.vscode-pylance",
        "ahmadawais.shades-of-purple",
        "mgesbert.python-path",
        // "dracula-theme.theme-dracula",
        // "enkia.tokyo-night",
        // "mrpbennett.atlantic-night",
        // "alexnho.a-touch-of-lilac-theme",
        // "whizkydee.material-palenight-theme",
        // "sdras.night-owl",
        // "samrapdev.outrun",
        // "GitHub.github-vscode-them",
        // "johnpapa.winteriscoming",
        // "gerane.Theme-Abyss",
        // "Equinusocio.vsc-material-theme",
        "theumletteam.umlet"
    ],
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [5000, 5432],
    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "pip install --user -r requirements.txt",
    // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode"
}
